@page  "/TimekeepingTransactions"
@inject ITimekeepingService transactionService

<h3>TimekeepingTransactions</h3>

<NavLink class="nav-link" href="AddTransaction">
    <span class="oi oi-plus" aria-hidden="true">Add New</span>
</NavLink>

@if (objTransaction is null)
{
    <p><em>Loading... !</em></p>}
else
{
    <table class="table table-responsive table-striped table-hover">
        <thead>
            <tr>
                <th>Transaction Id</th>
                <th>Transaction Type</th>
                <th>Transaction DateTime</th>
                <th>Employee Id</th>
                <th>First Name</th>
                <th>Last Name</th>
                <th>&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var trans in objTransaction)
            {
            <tr>
                <td>@trans.TimeKeepingTransactionTypeId</td>
                <td>@trans.TransactionType.TransactionTypeName</td>
                <td>@trans.TransactionDateTime</td>
                <td>@trans.EmployeeId</td>
                <td>@trans.Employee.FirstName</td>
                <td>@trans.Employee.LastName</td>
                <td>
                    <a class="nav-link" href="EditEmployee/@trans.TimeKeepingTransactionTypeId">
                        <span class="oi oi-pencil" aria-hidden="true">Edit</span>
                    </a>
                    <a class="nav-link" href="Delete/@trans.TimeKeepingTransactionTypeId">
                        <span class="oi oi-trash" aria-hidden="true">Delete</span>
                    </a>
                </td>
            </tr>
           }
        </tbody>
    </table>
}

@code {
    List<TimeKeepingTransaction> objTransaction;
    protected override async Task OnInitializedAsync()
    {
        objTransaction = await Task.Run(() => transactionService.GetAllTransactions());
    }
}
