@page "/DeleteTransaction/{TranId}"
@inject ITimekeepingService timeService
@inject NavigationManager NavigationManager
@inject IJSRuntime JsRuntime

<h3>Are you sure want to delete this Timekeeping transaction?</h3>
<hr />

@if (transObj != null)
{
    <form>
        <div class="row">
            <div class=" col-md-8">
                <div class="form-group">
                    <label>Transaction Id:</label>
                    <label>@transObj.TransactionTypeId</label>
                </div>
                <div class="form-group">
                    <label>TransactionDateTime:</label>
                    <label>@transObj.TransactionDateTime</label>
                </div>
                <div class="form-group">
                    <label>Transaction Type :</label>
                    <label>@transObj.TransactionType.TransactionTypeName</label>
                </div>
                <div class="form-group">
                    <label>Employee Id:</label>
                    <label>@transObj.EmployeeId</label>
                </div>
                <div class="form-group">
                    <label>Employee Name:</label>
                    <label>@transObj.Employee.LastName, @transObj.Employee.FirstName</label>
                </div>
            </div>

        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    <input type="button" class="btn btn-danger" @onclick="@DeleteATransaction" value="Delete" />
                    <input type="button" class="btn btn-secondary" @onclick="@Cancel" value="Cancel" />
                </div>
            </div>
        </div>
    </form>
}

@code
{
    [Parameter]
    public string TranId { get; set; }

    TimeKeepingTransaction transObj;


    protected override async Task OnInitializedAsync()
    {
        transObj = await Task.Run(() => timeService.GetTransactionByIdAsync(Convert.ToInt32(TranId)));

    }
    protected async void DeleteATransaction()
    {
        await timeService.DeleteTransactionAsync(transObj);
        await JsRuntime.InvokeVoidAsync("alert", "Deleted Successfully!");
        NavigationManager.NavigateTo("TimekeepingList");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("TimekeepingList");
    }
}
